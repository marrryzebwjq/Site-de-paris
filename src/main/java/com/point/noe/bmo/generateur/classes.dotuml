ClassDiagram [frame=true framecolor=steelblue label="Class Diagram"] {
    /* Résultats */
    abstract class AResultat
    { 
        public Gagnant : String;
        public abstract DemandeCreationPari(InNomPari : String, InPariMax : int, InGainMax : int) : APariAvance;
    };

    class ResultatFootball
    {
        public ScoreMiTempsA1 : Integer;
        public ScoreMiTempsB1 : Integer;
        public ScoreMiTempsA2 : Integer;
        public ScoreMiTempsB2 : Integer;
    };

    ResultatFootball --> AResultat;

    class ResultatTennis
    {
        public scoreA1 : Integer; 
        public scoreB1 : Integer; 
        public scoreA2 : Integer;
        public scoreB2 : Integer; 
        public scoreA3 : Integer; 
        public scoreB3 : Integer; 
        public scoreA4 : Integer;
        public scoreB4 : Integer;
        public scoreA5 : Integer; 
        public scoreB5 : Integer;
    };

    ResultatTennis --> AResultat;

    class ResultatBaseball
    {
        public scoreA : Integer; 
        public scoreB : Integer;
    };

    ResultatBaseball --> AResultat;

    /* Pari */
    abstract class APari
    {
        public Nom : String;
        public PariMax : int;
        public GainMax : int;
    };

    APari -- AResultat : "< Réfère"

    class PariSimple
    {
        public Gagnant : String
    };

    PariSimple --> APari;

    abstract class APariAvance
    {};

    APariAvance --> APari;

    class Pari1Entier
    {
        public Reference1 : Integer;
    };

    Pari1Entier --> APariAvance;

    class Pari2Entier
    {
        public Reference1 : Integer;
        public Reference2 : Integer;
    };

    Pari2Entier --> APariAvance;

    class Pari1String
    {
        public Reference1 : String;
    };

    Pari1String--> APariAvance;

    /* Tickets */
    abstract class ATicket
    {
        private Montant : int

        public EstGagnant() : boolean
    };

    class TicketSimple
    {
        public PariGagnant : String;
    };

    TicketSimple -- PariSimple : "< Pari sur";
    TicketSimple --> ATicket;

    class Ticket1String
    {
        public PariString1 : String;
    };

    Ticket1String --> ATicket;
    Ticket1String -- Pari1String : "< Pari sur";
    
    class Ticket1Entier
    {
        public PariEntier1 : int;
    };

    Ticket1Entier --> ATicket;
    Ticket1Entier -- Pari1Entier : "< Pari sur";

    class Ticket2Entier
    {
        public PariEntier1 : int;
        public PariEntier2 : int;
    };

    Ticket2Entier --> ATicket;
    Ticket2Entier -- Pari2Entier : "< Pari sur";

    /* Compte */
    class Compte
    {
        public Capital : int;
    };

    /* Parieur */
    class Parieur
    {
        public DemandeTicketSimple(InEvenement : String, InPari : String, InPari1 : String, InMontant : int) : void;
        public DemandeTicket1Entier(InEvenement : String, InPari : String, InPari1 : int, InMontant : int) : void;
        public DemandeTicket2Entier(InEvenement : String, InPari : String, InPari1 : int, InPari2 : int, InMontant : int) : void;
        public DemandeTicket1String(InEvenement : String, InPari : String, InPari1 : String, InMontant : int) : void;
        public DemandeVersement(InMontant : int) : void;
    };

    Compte -a-> Parieur;
    Parieur -- APari : "< Pari sur"

    /* Bookmaker */
    class Bookmaker
    {
        public DemandeAjoutPari(InEvenement : String, InPari : String, InMaxPari : int, InMaxGain : int) : void;
        public DemandeOuvertureEvenement(InSport : USport, InEvenement : String, resultat : AResultat) : void;
        public DemandeResultat(InEvenement : String) : AResultat;
        public DemandeFermetureEvenement(InEvenement : String) : void;
    };

    /* Système */
    class Systeme
    {
        public AjouteTicket1Simple(InEvenement : String, InPari : PariSimple, InPari1 : String, parieur : Parieur, InMontant : int) : void;
        public AjouteTicket1Entier(InEvenement : String, InPari : Pari1Entier, InPari1 : int, parieur : Parieur, InMontant : int) : void;
        public AjouteTicket2Entier(InEvenement : String, InPari : Pari2Entier, InPari1 : int, InPari2 : int, parieur : Parieur, InMontant : int) : void;
        public AjouteTicket1String(InEvenement : String, InPari : Pari1String, InPari1 : String, parieur : Parieur, InMontant : int) : void;
        public AjoutePariAvance(InEvenement : String, InPari : APariAvance) : void;
        public AccederResultats(InEvenement : String) : AResultat;
        public OuvrirEvenement(InSport : USport, InNom : String) : void;
        public FermerEvenement(InEvenement : String) : void;
    };

    Systeme -- Compte : "< Crédite / Débite"

    /* Evènement */
    class Evenement
    {
        private Sport : USport
        private Nom : String
    };

    AResultat "1" -a-> "1" Evenement;
    PariSimple "1" -a-> "1" Evenement; // Un évènement contient toujours un pari simple
    APariAvance "*" -a-> "1" Evenement;
    Bookmaker -- Systeme : "Communique >";
    Parieur -- Systeme : "Communique >";
    ATicket "*" -a-> "1" Evenement;
    ATicket "*" -- "1" Parieur : "Associé à >" 
    AResultat -- Systeme : "Communique >";
    Evenement "*" -a-> "1" Systeme;

    /* Type de Sport */
    class USport
    {
        FOOTBALL = "1";
        TENNIS = "2";
        BASEBALL = "3";
    };

    USport -- AResultat : "< Sélectionne"
}