ClassDiagram [frame=true framecolor=steelblue label="Class Diagram"] {
  
  

  class Bookmaker
  {
    public ajoutEvenement(Evenement : AResultat)
  }

class Systeme
  {
    private FermetureEvenement(evenement : Evenement);
  }


  class Evenement
  {
    private Sport : String

    public ajoutAPari(Pari : APari)
  }
  
  abstract class AResultat
  {
    private Gagnant : String
  }





  class Parieur
  {
    private NombreDeJetons : Entier

    public parier(pari : APari, montant : Montant)
  }


  abstract class ATicket
  {
    private Montant : Entier
  }
  abstract class ATicketAvance
  {
  }
  class TicketSimple
  {
    private PariGagnant : String
  }
  

  abstract class APari
  {
    abstract private estGagnant(ticket : ATicket, evenement : Evenement)
  }
  class PariSimple
  {
    private estGagnant(ticket : TicketSimple, evenement : Evenement)
  }
  abstract class APariAvance
  {
    abstract private estGagnant(ticket : ATicket, evenement : Evenement)
  }

  TicketSimple -g-> ATicket;
  TicketSimple -- PariSimple : "Pointe sur >";
  ATicketAvance -g-> ATicket;
  ATicketAvance -- APariAvance : "Pointe sur >";
  APari -- AResultat : "< Lecture";
  AResultat "1" -a-> "1" Evenement;
  APari "1...*" -a-> "1" Evenement;
  Systeme "1" -- "1" Parieur : "< Credite / Debite";
  Systeme "1" <-a- "*" ATicket;
  APari "1" -- "1" Parieur with ATicket : "*";
  PariSimple -g-> APari;
  APariAvance -g-> APari;
  Bookmaker "1" -a-> "*" Evenement;

  class ResultatFootball
  {
    private scoreA1 : int
    private scoreB1 : int
    private scoreA2 : int 
    private scoreB2 : int
    private equipeA : String
    private equipeB : String
  };

  class ResultatBaseball
  { 
    private scoreA : int
    private scoreB : int
  };

  class ResultatTennis
  {
    private scoreA1 : int 
    private scoreB1 : int 
    private scoreA2 : int
    private scoreB2 : int 
    private scoreA3 : int 
    private scoreB3 : int 
    private scoreA4 : int
    private scoreB4 : int
    private scoreA5 : int 
    private scoreB5 : int
    private joueurA : String
    private joueurB : String 
  };

  class PariFootballMitemps1
  {
    private estGagnant(ticket : Ticket, evenement : Evenement);
  };

  ResultatFootball -g-> AResultat;
  ResultatBaseball -g-> AResultat;
  ResultatTennis   -g-> AResultat;

  PariFootballMitemps1 -g-> APariAvance;

  // Exemple
  PariFootballMitemps1 -- ResultatFootball : "< Lecture Champs A1 et B1";




  // Mise en page

  align {
    Bookmaker
    Evenement
    AResultat
  }
  align {
    ResultatFootball
    ResultatBaseball
    ResultatTennis
  }

  align {
    Systeme
    Parieur
  }

  align {
    TicketSimple
    ATicketAvance
  }
  align {
    PariFootballMitemps1
    APariAvance
  }

}

